name: Build and Release gstreamer

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:
    inputs:
      inputGstVersion:
        description: "输入gstreamer分支版本："
        required: true
        default: "1.27.2"
      inputLibde265:
        description: "输入libde265版本："
        required: true
        default: "v1.0.16"
      inputLibvideogfx:
        description: "输入libvideogfx的版本："
        required: true
        default: "v1.0.9"

env:
  gstVer: ${{ github.event.inputs.inputGstVersion }}
  libde265Ver: ${{ github.event.inputs.inputLibde265 }}
  libvideogfxVer: ${{ github.event.inputs.inputLibvideogfx }}

jobs:
  ubuntu:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Install Dependencies
        run: |
          echo -e "deb http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse\ndeb-src http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse" | sudo tee /etc/apt/sources.list
          sudo apt update
          sudo apt install -y build-essential libde265-0 libde265-dev pkg-config cmake automake autoconf libtool libltdl-dev autopoint
          sudo apt build-dep libde265 gstreamer1.0 -y
          pip install meson  ninja --break-system-package
          sudo mkdir -p /data
          sudo chmod 777 /data
          mkdir -p /data/data/com.termux/files/usr/glibc/

      - name: Download Source Code
        run: |
          cd /tmp
          
          # 下载 libde265
          mkdir libde265-src/
          cd libde265-src/
          echo "Downloading libde265 ${libde265Ver}"
          wget -O libde265.tar.gz "https://github.com/strukturag/libde265/archive/refs/tags/${libde265Ver}.tar.gz"
          tar --strip-components=1 -xzf  libde265.tar.gz -C .
          
          cd /tmp

          # 下载 libvideogfx
          mkdir libvideogfx-src/
          cd libvideogfx-src/
          echo "Downloading libvideogfx ${libvideogfxVer}"
          wget -O libvideogfx.tar.gz "https://github.com/farindk/libvideogfx/archive/refs/tags/${libvideogfxVer}.tar.gz"
          tar --strip-components=1 -xzf  libvideogfx.tar.gz -C .
          
          # 克隆 gstreamer
          cd /tmp
          echo "Cloning gstreamer ${gstVer}"
          git clone -b ${gstVer} https://gitlab.freedesktop.org/gstreamer/gstreamer.git gstreamer-src

      - name: Compile libvideogfx
        run: |
          cd /tmp/libvideogfx-src/
          autoupdate
          ./autogen.sh
          if ! make -j$(nproc); then
            echo "编译失败"
            exit 1
          fi
          make install
      
      - name: Compile libde265
        run: |
          cd /tmp/libde265-src/
          export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
          mkdir build
          cd build
          if ! cmake .. -DENABLE_ENCODER=on -DENABLE_SDL=off -DCMAKE_INSTALL_PREFIX=/data/data/com.termux/files/usr/glibc/; then
            echo "构建失败"
            exit 1
          fi
          if ! make -j$(nproc); then
            echo "编译失败"
            exit 1
          fi
          make install

      - name: Compile Gstreamer
        run: |
          cd /tmp/gstreamer-src
          
          meson setup builddir \
            --libdir=lib
            --buildtype=release \
            --strip \
            -Dgst-full-target-type=shared_library \
            -Dintrospection=disabled \
            -Dgst-full-libraries=app,video,player \
            -Dbase=enabled \
            -Dgood=enabled \
            -Dbad=enabled \
            -Dugly=enabled \
            -Dlibav=enabled \
            -Dtests=disabled \
            -Dexamples=disabled \
            -Ddoc=disabled \
            -Dges=disabled \
            -Dpython=disabled \
            -Ddevtools=disabled \
            -Dgstreamer:check=disabled \
            -Dgstreamer:benchmarks=disabled \
            -Dgstreamer:libunwind=disabled \
            -Dgstreamer:libdw=disabled \
            -Dgstreamer:bash-completion=disabled \
            -Dgst-plugins-good:cairo=disabled \
            -Dgst-plugins-good:gdk-pixbuf=disabled \
            -Dgst-plugins-good:oss=disabled \
            -Dgst-plugins-good:oss4=disabled \
            -Dgst-plugins-good:v4l2=disabled \
            -Dgst-plugins-good:aalib=disabled \
            -Dgst-plugins-good:jack=disabled \
            -Dgst-plugins-good:pulse=enabled \
            -Dgst-plugins-good:adaptivedemux2=disabled \
            -Dgst-plugins-good:libcaca=disabled \
            -Dgst-plugins-good:mpg123=enabled \
            -Dgst-plugins-base:examples=disabled \
            -Dgst-plugins-base:alsa=enabled \
            -Dgst-plugins-base:pango=disabled \
            -Dgst-plugins-base:x11=enabled \
            -Dgst-plugins-base:gl_winsys=x11 \
            -Dgst-plugins-base:gl=enabled \
            -Dgst-plugins-bad:gpl=enabled \
            -Dgst-plugins-bad:androidmedia=disabled \
            -Dgst-plugins-bad:rtmp=disabled \
            -Dgst-plugins-bad:shm=disabled \
            -Dgst-plugins-bad:zbar=disabled \
            -Dgst-plugins-bad:webp=disabled \
            -Dgst-plugins-bad:hls-crypto=openssl \
            -Dgst-plugins-bad:kms=disabled \
            -Dgst-plugins-bad:vulkan=enabled \
            -Dgst-plugins-bad:vulkan-windowing=x11 \
            -Dgst-plugins-bad:vulkan-video=enabled \
            -Dgst-plugins-bad:dash=disabled \
            -Dgst-plugins-bad:analyticsoverlay=disabled \
            -Dgst-plugins-bad:nvcodec=disabled \
            -Dgst-plugins-bad:uvch264=disabled \
            -Dgst-plugins-bad:v4l2codecs=disabled \
            -Dgst-plugins-bad:udev=disabled \
            -Dgst-plugins-bad:libde265=enabled \
            -Dgst-plugins-bad:smoothstreaming=disabled \
            -Dgst-plugins-bad:fluidsynth=disabled \
            -Dgst-plugins-bad:inter=disabled \
            -Dpackage-origin="[gstreamer-termux] (https://github.com/Waim908/gstreamer-termux) ᗜˬᗜ" \
            --prefix=/data/data/com.termux/files/usr/glibc
          meson compile -C builddir
          meson install -C builddir

      - name: Package glibc
        run: |
          cd /data/data/com.termux/files/usr/
          tar -I 'xz -T$(nproc)' -cf /tmp/gstreamer-${gstVer}.tar.xz glibc/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: gstreamer-${{ github.event.inputs.inputGstVersion }}
          draft: false
          prerelease: false
          tag_name: ${{ github.event.inputs.inputGstVersion }}
          body: |
            gstreamer => ${{ github.event.inputs.inputGstVersion }}
            (H265编解码)libde265 => ${{ github.event.inputs.inputLibde265 }}
            (不构建在包内)libvideogfx => ${{ github.event.inputs.inputLibvideogfx }}
            
          files: /tmp/gstreamer-${{ github.event.inputs.inputGstVersion }}.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}